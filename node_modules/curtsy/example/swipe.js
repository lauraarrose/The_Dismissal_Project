var swipe,
	circle;

function swipeDirection(gesture) {
  var xdiff = gesture.startPosition[0] - gesture.position[0],
      ydiff = gesture.startPosition[1] - gesture.position[1],
      zdiff = gesture.startPosition[2] - gesture.position[2];

  var movements = [
    { 
      distance: Math.abs(xdiff),
      coordinate: 'x',
      type: (xdiff > 0) ? 'left' : 'right'
    },
    {
      distance: Math.abs(ydiff),
      coordinate: 'y',
      type: (ydiff > 0) ? 'down' : 'up'
    },
    {
      distance : Math.abs(zdiff),
      coordinate : 'z',
      type : (zdiff > 0) ? 'forward' : 'back'
    }    
  ];

  // sort movements based on furthest distance
  movements.sort(function(a, b) {
    return a['distance'] < b['distance'];
  });

  // return the movement type with the greatest change in distance
  return movements[0];
}


function circleDirection(gesture) {
  return {
    count: Math.round(gesture.progress),
    type: (gesture.normal[2] > 0) ? 'counter-clockwise' : 'clockwise'
  };
}

swipe = swipeDirection;
circle = circleDirection;
function direction(gesture) {
  if (gesture.type === 'swipe')
    return swipeDirection(gesture);
  if (gesture.type === 'circle')
    return circleDirection(gesture);
  // if gesture direction is not supported, return empty string
  return '';
};
// var Leap = require('leapjs')
var controller = new Leap.Controller({enableGestures:true})
// , direction = require('../lib/curtsy')

controller.on( 'frame', function( frame ) {
	if (frame.gestures.length) {
		// console.log( frame );	
	}
	
});
// var previous;

// controller.on( 'gesture', function(gesture) {
// 	// console.log("PREVIOUS", "------", previous, "CURRENT", "------", gesture);
// 	// previous = gesture;
// 	if (gesture.type==='swipe') {
// 		console.log( gesture );
// 	}
// });


controller.on('gesture', function(gesture) {
	if (frame.gestures.length) {
    	var gesture = frame.gestures[0];
    	if (gesture.type == 'swipe' && gesture.state ==='stop') {  
			console.log(gesture);
    		var swipeDir = direction(gesture);
    		console.log('swipe', swipeDir.type);    
    		if (swipeDir.type==='left') {
    			console.log("left");
    		}
  			if (swipeDir.type==='right'){
  				console.log("right");
  			} 
  		}
    }
});


// init
controller.on('ready', function() { console.log('ready'); });
controller.connect();
console.log('\nWaiting for device to connect...');
